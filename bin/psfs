#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys, os, argparse
import psfs

if __name__ == "__main__":

    # argument parse
    p = argparse.ArgumentParser()

    if sys.stdin.isatty():
        p.add_argument(
            "input",
            nargs="+", # support multi args
            help=r"JSON file"
        )
        isatty = True
    else:
        isatty = False

    p.add_argument(
        "--output", "-o",
        default=None,
        help=r"image file"
    )

    p.add_argument(
        "--encoding", "-e",
        default="utf8",
        help=r"encoding (DEFAULT: utf-8)"
    )

    p.add_argument(
        "--extention", "-x",
        default="png",
        help=r"extention of image files"
    )

    p.add_argument(
        "--threshold",
        default="0.02",
        help=r"minimum ratio that can display text (DEFAULT: 0.02)"
    )

    p.add_argument(
        "--maintitle", "-t",
        default=None,
        help=r"main title"
    )

    p.add_argument(
        "--nosubtitle",
        action="store_true", default=False,
        help=r"hide sub title"
    )

    p.add_argument(
        "--noylab", "-y",
        action="store_true", default=False,
        help=r"hide ylabs"
    )

    p.add_argument(
        "--nospines",
        action="store_true", default=False,
        help=r"hide spines"
    )

    args = p.parse_args()

    # 実行
    if isatty:
        files = args.input
    else:
        files = [x.strip() for x in sys.stdin.readlines()]

    fs = psfs.Prop(files[0], args.encoding)

    if args.noylab:
        fs.noylab = True

    if args.nospines:
        fs.spines = True

    if not args.nosubtitle:
        fs.sub = True

    fs.threshold = float(args.threshold)

    fs.main = args.maintitle

    # 指定ファイルが 1 つのみの場合
    if len(files) == 1:

        fs.prepare()

        if args.output:
            if os.path.isdir(args.output):

                nm = os.path.splitext(
                    os.path.basename(files[0])
                )[0]

                fs.savefig(os.path.join(
                    args.output, nm + "." + args.extention
                ))

            else:
                fs.savefig(args.output)
        else:
            fs.show()
            input("Press ENTER")

    # 指定ファイルが複数の場合
    else:

        # args.output がディレクトリである場合にのみ実行
        if args.output and os.path.isdir(args.output):

            for file in files:

                fs.readFile(file, args.encoding)
                fs.setOptions()
                fs.prepare()

                nm = os.path.splitext(
                    os.path.basename(file)
                )[0]

                fs.savefig(os.path.join(
                    args.output, nm + "." + args.extention
                ))
            
